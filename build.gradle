// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        kotlin_version = "1.4.32"
        lifecycle_version = "2.2.0"
        activity_version = "1.2.0"
        fragment_version = "1.3.0"
        kotlinx_coroutines_version ="1.4.1"
        paging_version = "3.0.0-alpha11"
        gson_version = "2.8.5"
        retrofit2_version = "2.9.0"
        immersionbar_version = "3.0.0"

        appId = "com.yc.shadowdemo"
    }
    repositories {
        google()
        maven { url 'https://jitpack.io' }
        maven {url 'https://developer.huawei.com/repo/'} //华为扫码
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.0.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.tencent.shadow.core:runtime-debug'
        classpath 'com.tencent.shadow.core:activity-container-debug'
        classpath 'com.tencent.shadow.core:gradle-plugin'//用于插件gradle里的shadow{ packagePlugin {pluginTypes {xxxx}}}
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath 'com.huawei.agconnect:agcp:1.2.0.300'//华为扫码
    }
}

allprojects {
    repositories {
        google()
        maven { url 'https://jitpack.io' }
        mavenCentral()
        jcenter() // Warning: this repository is going to shut down soon
        maven {url 'https://developer.huawei.com/repo/'} //华为扫码
    }
}
apply from: 'buildScripts/gradle/common.gradle'
apply from: "buildScripts/gradle/maven.gradle"
task clean(type: Delete) {
    delete rootProject.buildDir
    dependsOn gradle.includedBuild('coding').task(':checks:clean')
    dependsOn gradle.includedBuild('coding').task(':lint:clean')
    dependsOn gradle.includedBuild('coding').task(':code-generator:clean')
    dependsOn gradle.includedBuild('core').task(':gradle-plugin:clean')
    dependsOn gradle.includedBuild('core').task(':common:clean')
    dependsOn gradle.includedBuild('core').task(':loader:clean')
    dependsOn gradle.includedBuild('core').task(':manager:clean')
    dependsOn gradle.includedBuild('core').task(':runtime:clean')
    dependsOn gradle.includedBuild('core').task(':activity-container:clean')
    dependsOn gradle.includedBuild('core').task(':transform:clean')
    dependsOn gradle.includedBuild('core').task(':transform-kit:clean')
    dependsOn gradle.includedBuild('dynamic').task(':dynamic-host:clean')
    dependsOn gradle.includedBuild('dynamic').task(':dynamic-loader:clean')
    dependsOn gradle.includedBuild('dynamic').task(':dynamic-loader-impl:clean')
    dependsOn gradle.includedBuild('dynamic').task(':dynamic-manager:clean')
}