plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.yc.pluginmerge"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    //Shadow Transform后业务代码会有一部分实际引用runtime中的类
    //如果不以compileOnly方式依赖，会导致其他Transform或者Proguard找不到这些类
    compileOnly 'com.tencent.shadow.core:runtime-debug'
}
apply plugin: 'com.tencent.shadow.plugin'

shadow {
    transform {
//        useHostContext = ['abc']
    }

    packagePlugin {
        pluginTypes {
            debug {
                loaderApkConfig = new Tuple2('plugin-loader-debug.apk', ':plugin-loader:assembleDebug')
                runtimeApkConfig = new Tuple2('plugin-runtime-debug.apk', ':plugin-runtime:assembleDebug')
                pluginApks {
                    pluginApk1 {
                        businessName = 'plugin1-app'
                        partKey = 'plugin1-app'
                        buildTask = ':plugin1:assembleDebug'
                        apkName = 'plugin1-debug.apk'
                        apkPath = 'plugin1/build/outputs/apk/debug/plugin1-debug.apk'
                        hostWhiteList = []
                    }
                    pluginApk2 {
                        businessName = 'plugin2-app'
                        partKey = 'plugin2-app'
                        buildTask = ':plugin2:assembleDebug'
                        apkName = 'plugin2-debug.apk'
                        apkPath = 'plugin2/build/outputs/apk/debug/plugin2-debug.apk'
                        hostWhiteList = []
                    }
                }
            }

            release {
                loaderApkConfig = new Tuple2('plugin-loader-release-unsigned.apk', ':plugin-loader:assembleRelease')
                runtimeApkConfig = new Tuple2('plugin-runtime-release-unsigned.apk', ':plugin-runtime:assembleRelease')
                pluginApks {
                    pluginApk1 {
                        businessName = 'plugin1-app'
                        partKey = 'plugin1-app'
                        buildTask = ':plugin1:assembleRelease'
                        apkName = 'plugin1-debug.apk'
                        apkPath = 'plugin1/build/outputs/apk/debug/plugin1-debug.apk'
                        hostWhiteList = []
                    }
                    pluginApk2 {
                        businessName = 'plugin2-app'
                        partKey = 'plugin2-app'
                        buildTask = ':plugin2:assembleRelease'
                        apkName = 'plugin2-release.apk'
                        apkPath = 'plugin2/build/outputs/apk/debug/plugin2-release.apk'
                        hostWhiteList = []
                    }
                }
            }
        }
        loaderApkProjectPath = 'plugin-loader'
        runtimeApkProjectPath = 'plugin-runtime'
        version = 1
        compactVersion = [1, 2, 3]
        uuidNickName = "1.1.1"
    }
}